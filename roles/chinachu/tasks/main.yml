- name: install vainfo
  apt:
    name: vainfo
    cache_valid_time: 3600
    update_cache: yes

- name: Checkout Chinachu
  git:
    repo: https://github.com/Chinachu/Chinachu.git
    dest: "{{ chinachu.home }}"
    force: yes

- name: Install Chinachu
  expect:
    command: ./chinachu installer
    chdir: "{{ chinachu.home }}"
    responses:
      "what do you install": "1"
    creates: "{{ chinachu.home }}/usr"

- name: create symlink to Node.js
  file:
    src: "/usr/bin/{{ item }}"
    dest: "{{ chinachu.home }}/.nave/{{ item }}"
    state: link
  with_items:
    - node
    - npm

- name: create rules.json
  copy:
    content: []
    dest: "{{ chinachu.home }}/rules.json"

- stat:
    path: "{{ chinachu.home }}/config.json"
  register: config_json

- name: copy config.json
  copy:
    src: "{{ chinachu.home }}/config.sample.json"
    dest: "{{ chinachu.home }}/config.json"
    remote_src: yes
  when: not config_json.stat.exists

- name: modify uid in config.json
  lineinfile:
    path: "{{ chinachu.home }}/config.json"
    regexp: '"uid": '
    line: '  "uid": "pi",'

# # - name: modify vaapiEnabled in config.json
# #   lineinfile:
# #     path: /srv/tmp/Chinachu/config.json
# #     regexp: '"vaapiEnabled": '
# #     line: '  "vaapiEnabled": true,'

- name: delete Chinachu ffmpeg
  file:
    path: "{{ chinachu.home }}/usr/bin/{{ item }}"
    state: absent
  with_items:
    - avconv
    - avprobe
    - ffmpeg
    - ffprobe

- stat:
    path: "{{ chinachu.home }}"
  register: chinachu_home

- name: chown Chinachu
  file:
    path: "{{ chinachu.home }}"
    state: directory
    recurse: yes
    owner: pi
    group: pi
  when: chinachu_home.stat.pw_name != "pi"

- shell:
    cmd: pm2 ls|grep chinachu-wui|cut -d' ' -f 6 || true
  register: pm2_chinachu_wui

- name: auto start Chinachu
  shell: |
    pm2 startup
    pm2 start processes.json
    pm2 save
  args:
    chdir: "{{ chinachu.home }}"
  when: pm2_chinachu_wui.stdout != "chinachu-wui"
